apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: rabbitmq
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revisionHistory }}
  updateStrategy:
    type: {{ .Values.upgrades.updateStrategy }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/container.init: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
        checksum/etc.config: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        dashboard/url: http://{{ template "release_rabbitmq_host" . }}:{{ .Values.ports.management }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: rabbitmq
        image: "{{ .Values.image }}:{{.Values.imageTag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy | quote }}
        command: ["/container.init/rabbitmq-start"]
        livenessProbe:
          httpGet:
            path: /
            port: management
          initialDelaySeconds: 180
          timeoutSeconds: 10
          periodSeconds: 60
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "node_health_check"]
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 10
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: RABBITMQ_NODENAME
            value: rabbit@$(MY_POD_NAME).{{ template "release_rabbitmq_host" . }}
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: K8S_SERVICE_NAME
            value: {{ template "fullname" . }}
          - name: RABBITMQ_ERLANG_COOKIE
            value: "{{ .Values.erlangCookie }}"
        {{- if .Values.resources.enabled }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu | quote }}
            memory: {{ .Values.resources.limits.memory | quote }}
          requests:
            cpu: {{ .Values.resources.requests.cpu | quote }}
            memory: {{ .Values.resources.requests.memory | quote }}
        {{- end }}
        ports:
          - name: epmd
            protocol: TCP
            containerPort: {{ default "4369" .Values.ports.epmd }}
          - name: public
            protocol: TCP
            containerPort: {{ default "5672" .Values.ports.public }}
          - name: management
            protocol: TCP
            containerPort: {{ default "15672" .Values.ports.management }}
          - name: clustering
            protocol: TCP
            containerPort: {{ default "25672" .Values.ports.clustering }}
        volumeMounts:
          - name: rabbitmq-persistent-storage
            mountPath: /var/lib/rabbitmq
          - name: container-init
            mountPath: /container.init
          - name: config-volume
            mountPath: /etc/rabbitmq
{{- if .Values.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.metrics.image }}:{{.Values.metrics.imageTag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.metrics.imagePullPolicy | quote }}
        env:
          - name: PUBLISH_PORT
            value: {{ default "9150" .Values.metrics.port | quote }}
          - name: RABBIT_USER
            value: {{ .Values.metrics.user | quote }}
          - name: RABBIT_PASSWORD
            value: {{ .Values.metrics.password | default (tuple . .Values.metrics.user | include "rabbitmq.password_for_user") | quote }}
          - name: RABBIT_URL
            value: "http://127.0.0.1:{{.Values.ports.management}}"
          - name: RABBIT_CAPABILITIES
            value: "bert,no_sort"
        {{- if .Values.metrics.resources.enabled }}
        resources:
          limits:
            cpu: {{ .Values.metrics.resources.limits.cpu | quote }}
            memory: {{ .Values.metrics.resources.limits.memory | quote }}
          requests:
            cpu: {{ .Values.metrics.resources.requests.cpu | quote }}
            memory: {{ .Values.metrics.resources.requests.memory | quote }}
        {{- end }}
        ports:
          - name: metrics
            containerPort: {{ default "9150" .Values.metrics.port }}
{{- end }}
      volumes:
        - name: rabbitmq-persistent-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: container-init
          configMap:
            name: {{ template "fullname" . }}-bin
            defaultMode: 0744
        - name: config-volume
          configMap:
            name: {{ template "fullname" . }}-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: enabled_plugins
                path: enabled_plugins
